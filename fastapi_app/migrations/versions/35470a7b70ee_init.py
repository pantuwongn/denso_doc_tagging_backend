"""init

Revision ID: 35470a7b70ee
Revises: 
Create Date: 2023-01-27 09:41:51.430387

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import orm
import sqlmodel
from app.models import Category


# revision identifiers, used by Alembic.
revision = '35470a7b70ee'
down_revision = None
branch_labels = None
depends_on = None

initial_category = [
    'Document type',
    'Product',
    'Part no.',
    'Process',
    'Machine no.',
    'Line name'
]


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('enable', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('document',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('documentcategory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('value', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    bind = op.get_bind()
    session = orm.Session(bind=bind)
    categories = [Category(name=name, enable=True) for name in initial_category]
    session.add_all(categories)
    session.commit()
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('documentcategory')
    op.drop_table('document')
    op.drop_table('category')
    # ### end Alembic commands ###
